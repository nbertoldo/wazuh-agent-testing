MANAGER_IP = ENV['WAZUH_MANAGER_IP'] || "192.168.56.30"

DEFAULT_MEMORY = ENV['VM_MEMORY'] ? ENV['VM_MEMORY'].to_i : 4096
DEFAULT_CPUS   = ENV['VM_CPUS']   ? ENV['VM_CPUS'].to_i   : 4

# Detect the latest agent package in the ./packages directory
# It assumes the package is a .deb file and uses the latest modified one.
# If no package is found, it aborts with an error message.
AGENT_PACKAGE = Dir["./packages/wazuh-agent_*.deb"].max_by { |f| File.mtime(f) }

if AGENT_PACKAGE.nil?
  abort "❌ No agent package found in ./packages directory. Please ensure you have a .deb package available."
elsif !File.exist?(AGENT_PACKAGE)
  abort "❌ The specified agent package does not exist: #{AGENT_PACKAGE}. Please check the path."
else
  puts "✅ Using agent package: #{AGENT_PACKAGE}"
end

AGENT_PACKAGE_PATH = "/vagrant/packages/#{File.basename(AGENT_PACKAGE)}"

BOXES = [
    { name: "debian10", box: "generic/debian10" },
    { name: "debian11", box: "generic/debian11" },
    { name: "debian12", box: "debian/bookworm64" },
    { name: "ubuntu2004", box: "generic/ubuntu2004" },
    { name: "ubuntu2204", box: "generic/ubuntu2204" },
    { name: "ubuntu2404", box: "bento/ubuntu-24.04" },
]

Vagrant.configure("2") do |config|
    BOXES.each do |vm|
        config.vm.define vm[:name] do |node|
            node.vm.box = vm[:box]
            node.vm.hostname = "#{vm[:name]}.wazuh.test"
            node.vm.network "private_network", type: "dhcp"

            node.vm.synced_folder "../common", "/vagrant/common"
            node.vm.synced_folder "./scripts", "/vagrant/scripts"
            node.vm.synced_folder "./packages", "/vagrant/packages"
            node.vm.synced_folder "../queries", "/vagrant/queries"
            node.vm.synced_folder "../results", "/vagrant/results"

            node.vm.provider "virtualbox" do |vb|
                vb.memory = DEFAULT_MEMORY
                vb.cpus   = DEFAULT_CPUS
                vb.default_nic_type = "virtio"
            end

            node.vm.provision "shell",
            name: "Install Wazuh Agent",
            path: "scripts/install_agent.sh",
            args: ["#{AGENT_PACKAGE_PATH}", "#{MANAGER_IP}"]

            node.vm.provision "shell",
            name: "Install osquery",
            path: "../common/install_osquery.sh"

            node.vm.provision "shell",
            name: "Run osquery queries",
            path: "../common/run_queries.sh",
            args: ["/vagrant/queries/osquery_queries.conf"]
        end
    end
end
