MANAGER_IP = ENV['WAZUH_MANAGER_IP'] || "192.168.56.30"

AGENT_PACKAGE = ENV['AGENT_PACKAGE'] || "wazuh-agent_4.14.0-0_x86_64_d2a25de.rpm"

DEFAULT_MEMORY = ENV['VM_MEMORY'] ? ENV['VM_MEMORY'].to_i : 4096
DEFAULT_CPUS   = ENV['VM_CPUS']   ? ENV['VM_CPUS'].to_i   : 4

BOXES = [
    { name: "rhel7", box: "generic/rhel7" },
    { name: "rhel8", box: "generic/rhel8" },
    { name: "rhel9", box: "generic/rhel9" },
    { name: "centos7", box: "bento/centos-7" },
    { name: "centos8", box: "generic/centos8" },
    { name: "centos9s", box: "generic/centos9s" },
    { name: "centos10", box: "centos/stream10" },
    { name: "oracle9", box: "generic/oracle9" },
    { name: "amazon2", box: "bento/amazonlinux-2" },
    { name: "amazon2023", box: "gbailey/al2023" },
    { name: "opensuse15", box: "generic/opensuse15" },
    { name: "fedora40", box: "fedora/40-cloud-base" },
    { name: "fedora41", box: "fedora/41-cloud-base" }
]

Vagrant.configure("2") do |config|
    BOXES.each do |vm|
        config.vm.define vm[:name] do |node|
            node.vm.box = vm[:box]
            node.vm.hostname = "#{vm[:name]}.wazuh.test"
            node.vm.network "private_network", type: "dhcp"

            node.vm.synced_folder "../common", "/vagrant/common"
            node.vm.synced_folder "./scripts", "/vagrant/scripts"
            node.vm.synced_folder "./packages", "/vagrant/packages"
            node.vm.synced_folder "../queries", "/vagrant/queries"
            node.vm.synced_folder "../results", "/vagrant/results"

            node.vm.provider "virtualbox" do |vb|
                vb.memory = DEFAULT_MEMORY
                vb.cpus   = DEFAULT_CPUS
                vb.default_nic_type = "virtio"
            end

            node.vm.provision "shell", inline: <<-SHELL
            chmod +x /vagrant/scripts/install_agent.sh
            chmod +x /vagrant/common/*.sh
            /vagrant/scripts/install_agent.sh "/vagrant/packages/#{AGENT_PACKAGE}" "#{MANAGER_IP}"
            #/vagrant/common/configure_agent.sh #{MANAGER_IP}
            /vagrant/common/install_osquery.sh
            /vagrant/common/run_queries.sh /vagrant/queries/osquery_queries.conf
            SHELL
        end
    end
end